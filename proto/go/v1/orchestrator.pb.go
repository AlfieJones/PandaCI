// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        (unknown)
// source: proto/v1/orchestrator.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrchestratorServiceWorkflowStartedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowMeta  *WorkflowMeta          `protobuf:"bytes,1,opt,name=workflow_meta,json=workflowMeta,proto3" json:"workflow_meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrchestratorServiceWorkflowStartedRequest) Reset() {
	*x = OrchestratorServiceWorkflowStartedRequest{}
	mi := &file_proto_v1_orchestrator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrchestratorServiceWorkflowStartedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestratorServiceWorkflowStartedRequest) ProtoMessage() {}

func (x *OrchestratorServiceWorkflowStartedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_orchestrator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestratorServiceWorkflowStartedRequest.ProtoReflect.Descriptor instead.
func (*OrchestratorServiceWorkflowStartedRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_orchestrator_proto_rawDescGZIP(), []int{0}
}

func (x *OrchestratorServiceWorkflowStartedRequest) GetWorkflowMeta() *WorkflowMeta {
	if x != nil {
		return x.WorkflowMeta
	}
	return nil
}

type OrchestratorServiceWorkflowStartedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrchestratorServiceWorkflowStartedResponse) Reset() {
	*x = OrchestratorServiceWorkflowStartedResponse{}
	mi := &file_proto_v1_orchestrator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrchestratorServiceWorkflowStartedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestratorServiceWorkflowStartedResponse) ProtoMessage() {}

func (x *OrchestratorServiceWorkflowStartedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_orchestrator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestratorServiceWorkflowStartedResponse.ProtoReflect.Descriptor instead.
func (*OrchestratorServiceWorkflowStartedResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_orchestrator_proto_rawDescGZIP(), []int{1}
}

type OrchestratorServiceCreateJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowMeta  *WorkflowMeta          `protobuf:"bytes,1,opt,name=workflow_meta,json=workflowMeta,proto3" json:"workflow_meta,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Runner        *string                `protobuf:"bytes,3,opt,name=runner,proto3,oneof" json:"runner,omitempty"`
	Skipped       bool                   `protobuf:"varint,4,opt,name=skipped,proto3" json:"skipped,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrchestratorServiceCreateJobRequest) Reset() {
	*x = OrchestratorServiceCreateJobRequest{}
	mi := &file_proto_v1_orchestrator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrchestratorServiceCreateJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestratorServiceCreateJobRequest) ProtoMessage() {}

func (x *OrchestratorServiceCreateJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_orchestrator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestratorServiceCreateJobRequest.ProtoReflect.Descriptor instead.
func (*OrchestratorServiceCreateJobRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_orchestrator_proto_rawDescGZIP(), []int{2}
}

func (x *OrchestratorServiceCreateJobRequest) GetWorkflowMeta() *WorkflowMeta {
	if x != nil {
		return x.WorkflowMeta
	}
	return nil
}

func (x *OrchestratorServiceCreateJobRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrchestratorServiceCreateJobRequest) GetRunner() string {
	if x != nil && x.Runner != nil {
		return *x.Runner
	}
	return ""
}

func (x *OrchestratorServiceCreateJobRequest) GetSkipped() bool {
	if x != nil {
		return x.Skipped
	}
	return false
}

type OrchestratorServiceCreateJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobMeta       *JobMeta               `protobuf:"bytes,1,opt,name=job_meta,json=jobMeta,proto3" json:"job_meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrchestratorServiceCreateJobResponse) Reset() {
	*x = OrchestratorServiceCreateJobResponse{}
	mi := &file_proto_v1_orchestrator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrchestratorServiceCreateJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestratorServiceCreateJobResponse) ProtoMessage() {}

func (x *OrchestratorServiceCreateJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_orchestrator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestratorServiceCreateJobResponse.ProtoReflect.Descriptor instead.
func (*OrchestratorServiceCreateJobResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_orchestrator_proto_rawDescGZIP(), []int{3}
}

func (x *OrchestratorServiceCreateJobResponse) GetJobMeta() *JobMeta {
	if x != nil {
		return x.JobMeta
	}
	return nil
}

type OrchestratorServiceCreateTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowMeta  *WorkflowMeta          `protobuf:"bytes,1,opt,name=workflow_meta,json=workflowMeta,proto3" json:"workflow_meta,omitempty"`
	JobMeta       *JobMeta               `protobuf:"bytes,2,opt,name=job_meta,json=jobMeta,proto3" json:"job_meta,omitempty"`
	Data          *StartTaskData         `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Skipped       bool                   `protobuf:"varint,4,opt,name=skipped,proto3" json:"skipped,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrchestratorServiceCreateTaskRequest) Reset() {
	*x = OrchestratorServiceCreateTaskRequest{}
	mi := &file_proto_v1_orchestrator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrchestratorServiceCreateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestratorServiceCreateTaskRequest) ProtoMessage() {}

func (x *OrchestratorServiceCreateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_orchestrator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestratorServiceCreateTaskRequest.ProtoReflect.Descriptor instead.
func (*OrchestratorServiceCreateTaskRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_orchestrator_proto_rawDescGZIP(), []int{4}
}

func (x *OrchestratorServiceCreateTaskRequest) GetWorkflowMeta() *WorkflowMeta {
	if x != nil {
		return x.WorkflowMeta
	}
	return nil
}

func (x *OrchestratorServiceCreateTaskRequest) GetJobMeta() *JobMeta {
	if x != nil {
		return x.JobMeta
	}
	return nil
}

func (x *OrchestratorServiceCreateTaskRequest) GetData() *StartTaskData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *OrchestratorServiceCreateTaskRequest) GetSkipped() bool {
	if x != nil {
		return x.Skipped
	}
	return false
}

type OrchestratorServiceCreateTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrchestratorServiceCreateTaskResponse) Reset() {
	*x = OrchestratorServiceCreateTaskResponse{}
	mi := &file_proto_v1_orchestrator_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrchestratorServiceCreateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestratorServiceCreateTaskResponse) ProtoMessage() {}

func (x *OrchestratorServiceCreateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_orchestrator_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestratorServiceCreateTaskResponse.ProtoReflect.Descriptor instead.
func (*OrchestratorServiceCreateTaskResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_orchestrator_proto_rawDescGZIP(), []int{5}
}

func (x *OrchestratorServiceCreateTaskResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type OrchestratorServiceFinishWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowMeta  *WorkflowMeta          `protobuf:"bytes,1,opt,name=workflow_meta,json=workflowMeta,proto3" json:"workflow_meta,omitempty"`
	Conclusion    Conclusion             `protobuf:"varint,2,opt,name=conclusion,proto3,enum=proto.v1.Conclusion" json:"conclusion,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrchestratorServiceFinishWorkflowRequest) Reset() {
	*x = OrchestratorServiceFinishWorkflowRequest{}
	mi := &file_proto_v1_orchestrator_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrchestratorServiceFinishWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestratorServiceFinishWorkflowRequest) ProtoMessage() {}

func (x *OrchestratorServiceFinishWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_orchestrator_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestratorServiceFinishWorkflowRequest.ProtoReflect.Descriptor instead.
func (*OrchestratorServiceFinishWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_orchestrator_proto_rawDescGZIP(), []int{6}
}

func (x *OrchestratorServiceFinishWorkflowRequest) GetWorkflowMeta() *WorkflowMeta {
	if x != nil {
		return x.WorkflowMeta
	}
	return nil
}

func (x *OrchestratorServiceFinishWorkflowRequest) GetConclusion() Conclusion {
	if x != nil {
		return x.Conclusion
	}
	return Conclusion_CONCLUSION_UNSPECIFIED
}

type OrchestratorServiceFinishWorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrchestratorServiceFinishWorkflowResponse) Reset() {
	*x = OrchestratorServiceFinishWorkflowResponse{}
	mi := &file_proto_v1_orchestrator_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrchestratorServiceFinishWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestratorServiceFinishWorkflowResponse) ProtoMessage() {}

func (x *OrchestratorServiceFinishWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_orchestrator_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestratorServiceFinishWorkflowResponse.ProtoReflect.Descriptor instead.
func (*OrchestratorServiceFinishWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_orchestrator_proto_rawDescGZIP(), []int{7}
}

type OrchestratorServiceFinishTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowMeta  *WorkflowMeta          `protobuf:"bytes,1,opt,name=workflow_meta,json=workflowMeta,proto3" json:"workflow_meta,omitempty"`
	JobMeta       *JobMeta               `protobuf:"bytes,2,opt,name=job_meta,json=jobMeta,proto3" json:"job_meta,omitempty"`
	TaskMeta      *TaskMeta              `protobuf:"bytes,3,opt,name=task_meta,json=taskMeta,proto3" json:"task_meta,omitempty"`
	Conclusion    Conclusion             `protobuf:"varint,4,opt,name=conclusion,proto3,enum=proto.v1.Conclusion" json:"conclusion,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrchestratorServiceFinishTaskRequest) Reset() {
	*x = OrchestratorServiceFinishTaskRequest{}
	mi := &file_proto_v1_orchestrator_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrchestratorServiceFinishTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestratorServiceFinishTaskRequest) ProtoMessage() {}

func (x *OrchestratorServiceFinishTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_orchestrator_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestratorServiceFinishTaskRequest.ProtoReflect.Descriptor instead.
func (*OrchestratorServiceFinishTaskRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_orchestrator_proto_rawDescGZIP(), []int{8}
}

func (x *OrchestratorServiceFinishTaskRequest) GetWorkflowMeta() *WorkflowMeta {
	if x != nil {
		return x.WorkflowMeta
	}
	return nil
}

func (x *OrchestratorServiceFinishTaskRequest) GetJobMeta() *JobMeta {
	if x != nil {
		return x.JobMeta
	}
	return nil
}

func (x *OrchestratorServiceFinishTaskRequest) GetTaskMeta() *TaskMeta {
	if x != nil {
		return x.TaskMeta
	}
	return nil
}

func (x *OrchestratorServiceFinishTaskRequest) GetConclusion() Conclusion {
	if x != nil {
		return x.Conclusion
	}
	return Conclusion_CONCLUSION_UNSPECIFIED
}

type OrchestratorServiceFinishTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrchestratorServiceFinishTaskResponse) Reset() {
	*x = OrchestratorServiceFinishTaskResponse{}
	mi := &file_proto_v1_orchestrator_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrchestratorServiceFinishTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestratorServiceFinishTaskResponse) ProtoMessage() {}

func (x *OrchestratorServiceFinishTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_orchestrator_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestratorServiceFinishTaskResponse.ProtoReflect.Descriptor instead.
func (*OrchestratorServiceFinishTaskResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_orchestrator_proto_rawDescGZIP(), []int{9}
}

type OrchestratorServiceFinishJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowMeta  *WorkflowMeta          `protobuf:"bytes,1,opt,name=workflow_meta,json=workflowMeta,proto3" json:"workflow_meta,omitempty"`
	JobMeta       *JobMeta               `protobuf:"bytes,2,opt,name=job_meta,json=jobMeta,proto3" json:"job_meta,omitempty"`
	Conclusion    Conclusion             `protobuf:"varint,3,opt,name=conclusion,proto3,enum=proto.v1.Conclusion" json:"conclusion,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrchestratorServiceFinishJobRequest) Reset() {
	*x = OrchestratorServiceFinishJobRequest{}
	mi := &file_proto_v1_orchestrator_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrchestratorServiceFinishJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestratorServiceFinishJobRequest) ProtoMessage() {}

func (x *OrchestratorServiceFinishJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_orchestrator_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestratorServiceFinishJobRequest.ProtoReflect.Descriptor instead.
func (*OrchestratorServiceFinishJobRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_orchestrator_proto_rawDescGZIP(), []int{10}
}

func (x *OrchestratorServiceFinishJobRequest) GetWorkflowMeta() *WorkflowMeta {
	if x != nil {
		return x.WorkflowMeta
	}
	return nil
}

func (x *OrchestratorServiceFinishJobRequest) GetJobMeta() *JobMeta {
	if x != nil {
		return x.JobMeta
	}
	return nil
}

func (x *OrchestratorServiceFinishJobRequest) GetConclusion() Conclusion {
	if x != nil {
		return x.Conclusion
	}
	return Conclusion_CONCLUSION_UNSPECIFIED
}

type OrchestratorServiceFinishJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrchestratorServiceFinishJobResponse) Reset() {
	*x = OrchestratorServiceFinishJobResponse{}
	mi := &file_proto_v1_orchestrator_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrchestratorServiceFinishJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestratorServiceFinishJobResponse) ProtoMessage() {}

func (x *OrchestratorServiceFinishJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_orchestrator_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestratorServiceFinishJobResponse.ProtoReflect.Descriptor instead.
func (*OrchestratorServiceFinishJobResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_orchestrator_proto_rawDescGZIP(), []int{11}
}

type OrchestratorServiceCreateStepRequest struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	WorkflowMeta *WorkflowMeta          `protobuf:"bytes,1,opt,name=workflow_meta,json=workflowMeta,proto3" json:"workflow_meta,omitempty"`
	JobMeta      *JobMeta               `protobuf:"bytes,2,opt,name=job_meta,json=jobMeta,proto3" json:"job_meta,omitempty"`
	TaskMeta     *TaskMeta              `protobuf:"bytes,3,opt,name=task_meta,json=taskMeta,proto3,oneof" json:"task_meta,omitempty"`
	Name         string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to StepData:
	//
	//	*OrchestratorServiceCreateStepRequest_ExecData
	StepData      isOrchestratorServiceCreateStepRequest_StepData `protobuf_oneof:"step_data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrchestratorServiceCreateStepRequest) Reset() {
	*x = OrchestratorServiceCreateStepRequest{}
	mi := &file_proto_v1_orchestrator_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrchestratorServiceCreateStepRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestratorServiceCreateStepRequest) ProtoMessage() {}

func (x *OrchestratorServiceCreateStepRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_orchestrator_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestratorServiceCreateStepRequest.ProtoReflect.Descriptor instead.
func (*OrchestratorServiceCreateStepRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_orchestrator_proto_rawDescGZIP(), []int{12}
}

func (x *OrchestratorServiceCreateStepRequest) GetWorkflowMeta() *WorkflowMeta {
	if x != nil {
		return x.WorkflowMeta
	}
	return nil
}

func (x *OrchestratorServiceCreateStepRequest) GetJobMeta() *JobMeta {
	if x != nil {
		return x.JobMeta
	}
	return nil
}

func (x *OrchestratorServiceCreateStepRequest) GetTaskMeta() *TaskMeta {
	if x != nil {
		return x.TaskMeta
	}
	return nil
}

func (x *OrchestratorServiceCreateStepRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrchestratorServiceCreateStepRequest) GetStepData() isOrchestratorServiceCreateStepRequest_StepData {
	if x != nil {
		return x.StepData
	}
	return nil
}

func (x *OrchestratorServiceCreateStepRequest) GetExecData() *ExecInfo {
	if x != nil {
		if x, ok := x.StepData.(*OrchestratorServiceCreateStepRequest_ExecData); ok {
			return x.ExecData
		}
	}
	return nil
}

type isOrchestratorServiceCreateStepRequest_StepData interface {
	isOrchestratorServiceCreateStepRequest_StepData()
}

type OrchestratorServiceCreateStepRequest_ExecData struct {
	ExecData *ExecInfo `protobuf:"bytes,5,opt,name=exec_data,json=execData,proto3,oneof"`
}

func (*OrchestratorServiceCreateStepRequest_ExecData) isOrchestratorServiceCreateStepRequest_StepData() {
}

type OrchestratorServiceCreateStepResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PresignedOutputUrl string                 `protobuf:"bytes,2,opt,name=presigned_output_url,json=presignedOutputUrl,proto3" json:"presigned_output_url,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *OrchestratorServiceCreateStepResponse) Reset() {
	*x = OrchestratorServiceCreateStepResponse{}
	mi := &file_proto_v1_orchestrator_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrchestratorServiceCreateStepResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestratorServiceCreateStepResponse) ProtoMessage() {}

func (x *OrchestratorServiceCreateStepResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_orchestrator_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestratorServiceCreateStepResponse.ProtoReflect.Descriptor instead.
func (*OrchestratorServiceCreateStepResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_orchestrator_proto_rawDescGZIP(), []int{13}
}

func (x *OrchestratorServiceCreateStepResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrchestratorServiceCreateStepResponse) GetPresignedOutputUrl() string {
	if x != nil {
		return x.PresignedOutputUrl
	}
	return ""
}

type OrchestratorServiceFinishStepRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowMeta  *WorkflowMeta          `protobuf:"bytes,1,opt,name=workflow_meta,json=workflowMeta,proto3" json:"workflow_meta,omitempty"`
	JobMeta       *JobMeta               `protobuf:"bytes,2,opt,name=job_meta,json=jobMeta,proto3" json:"job_meta,omitempty"`
	TaskMeta      *TaskMeta              `protobuf:"bytes,3,opt,name=task_meta,json=taskMeta,proto3" json:"task_meta,omitempty"`
	Id            string                 `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Conclusion    Conclusion             `protobuf:"varint,5,opt,name=conclusion,proto3,enum=proto.v1.Conclusion" json:"conclusion,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrchestratorServiceFinishStepRequest) Reset() {
	*x = OrchestratorServiceFinishStepRequest{}
	mi := &file_proto_v1_orchestrator_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrchestratorServiceFinishStepRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestratorServiceFinishStepRequest) ProtoMessage() {}

func (x *OrchestratorServiceFinishStepRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_orchestrator_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestratorServiceFinishStepRequest.ProtoReflect.Descriptor instead.
func (*OrchestratorServiceFinishStepRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_orchestrator_proto_rawDescGZIP(), []int{14}
}

func (x *OrchestratorServiceFinishStepRequest) GetWorkflowMeta() *WorkflowMeta {
	if x != nil {
		return x.WorkflowMeta
	}
	return nil
}

func (x *OrchestratorServiceFinishStepRequest) GetJobMeta() *JobMeta {
	if x != nil {
		return x.JobMeta
	}
	return nil
}

func (x *OrchestratorServiceFinishStepRequest) GetTaskMeta() *TaskMeta {
	if x != nil {
		return x.TaskMeta
	}
	return nil
}

func (x *OrchestratorServiceFinishStepRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrchestratorServiceFinishStepRequest) GetConclusion() Conclusion {
	if x != nil {
		return x.Conclusion
	}
	return Conclusion_CONCLUSION_UNSPECIFIED
}

type OrchestratorServiceFinishStepResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrchestratorServiceFinishStepResponse) Reset() {
	*x = OrchestratorServiceFinishStepResponse{}
	mi := &file_proto_v1_orchestrator_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrchestratorServiceFinishStepResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestratorServiceFinishStepResponse) ProtoMessage() {}

func (x *OrchestratorServiceFinishStepResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_orchestrator_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestratorServiceFinishStepResponse.ProtoReflect.Descriptor instead.
func (*OrchestratorServiceFinishStepResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_orchestrator_proto_rawDescGZIP(), []int{15}
}

type OrchestratorServiceJobStartedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowMeta  *WorkflowMeta          `protobuf:"bytes,1,opt,name=workflow_meta,json=workflowMeta,proto3" json:"workflow_meta,omitempty"`
	JobMeta       *JobMeta               `protobuf:"bytes,2,opt,name=job_meta,json=jobMeta,proto3" json:"job_meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrchestratorServiceJobStartedRequest) Reset() {
	*x = OrchestratorServiceJobStartedRequest{}
	mi := &file_proto_v1_orchestrator_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrchestratorServiceJobStartedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestratorServiceJobStartedRequest) ProtoMessage() {}

func (x *OrchestratorServiceJobStartedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_orchestrator_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestratorServiceJobStartedRequest.ProtoReflect.Descriptor instead.
func (*OrchestratorServiceJobStartedRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_orchestrator_proto_rawDescGZIP(), []int{16}
}

func (x *OrchestratorServiceJobStartedRequest) GetWorkflowMeta() *WorkflowMeta {
	if x != nil {
		return x.WorkflowMeta
	}
	return nil
}

func (x *OrchestratorServiceJobStartedRequest) GetJobMeta() *JobMeta {
	if x != nil {
		return x.JobMeta
	}
	return nil
}

type OrchestratorServiceJobStartedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrchestratorServiceJobStartedResponse) Reset() {
	*x = OrchestratorServiceJobStartedResponse{}
	mi := &file_proto_v1_orchestrator_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrchestratorServiceJobStartedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestratorServiceJobStartedResponse) ProtoMessage() {}

func (x *OrchestratorServiceJobStartedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_orchestrator_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestratorServiceJobStartedResponse.ProtoReflect.Descriptor instead.
func (*OrchestratorServiceJobStartedResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_orchestrator_proto_rawDescGZIP(), []int{17}
}

type OrchestratorServiceCreateWorkflowAlertRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowMeta  *WorkflowMeta          `protobuf:"bytes,1,opt,name=workflow_meta,json=workflowMeta,proto3" json:"workflow_meta,omitempty"`
	Alert         *WorkflowAlert         `protobuf:"bytes,2,opt,name=alert,proto3" json:"alert,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrchestratorServiceCreateWorkflowAlertRequest) Reset() {
	*x = OrchestratorServiceCreateWorkflowAlertRequest{}
	mi := &file_proto_v1_orchestrator_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrchestratorServiceCreateWorkflowAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestratorServiceCreateWorkflowAlertRequest) ProtoMessage() {}

func (x *OrchestratorServiceCreateWorkflowAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_orchestrator_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestratorServiceCreateWorkflowAlertRequest.ProtoReflect.Descriptor instead.
func (*OrchestratorServiceCreateWorkflowAlertRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_orchestrator_proto_rawDescGZIP(), []int{18}
}

func (x *OrchestratorServiceCreateWorkflowAlertRequest) GetWorkflowMeta() *WorkflowMeta {
	if x != nil {
		return x.WorkflowMeta
	}
	return nil
}

func (x *OrchestratorServiceCreateWorkflowAlertRequest) GetAlert() *WorkflowAlert {
	if x != nil {
		return x.Alert
	}
	return nil
}

type OrchestratorServiceCreateWorkflowAlertResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrchestratorServiceCreateWorkflowAlertResponse) Reset() {
	*x = OrchestratorServiceCreateWorkflowAlertResponse{}
	mi := &file_proto_v1_orchestrator_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrchestratorServiceCreateWorkflowAlertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestratorServiceCreateWorkflowAlertResponse) ProtoMessage() {}

func (x *OrchestratorServiceCreateWorkflowAlertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_orchestrator_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestratorServiceCreateWorkflowAlertResponse.ProtoReflect.Descriptor instead.
func (*OrchestratorServiceCreateWorkflowAlertResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_orchestrator_proto_rawDescGZIP(), []int{19}
}

var File_proto_v1_orchestrator_proto protoreflect.FileDescriptor

var file_proto_v1_orchestrator_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x63, 0x68, 0x65,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x68,
	0x0a, 0x29, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x2c, 0x0a, 0x2a, 0x4f, 0x72, 0x63, 0x68,
	0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x23, 0x4f, 0x72, 0x63, 0x68, 0x65,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b,
	0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0c, 0x77,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x06, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x72, 0x75, 0x6e, 0x6e, 0x65,
	0x72, 0x22, 0x54, 0x0a, 0x24, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x6a, 0x6f, 0x62,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x07,
	0x6a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x22, 0xd8, 0x01, 0x0a, 0x24, 0x4f, 0x72, 0x63, 0x68,
	0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3b, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x2c, 0x0a,
	0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6b, 0x69, 0x70,
	0x70, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x70, 0x70,
	0x65, 0x64, 0x22, 0x37, 0x0a, 0x25, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x28,
	0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x2b, 0x0a, 0x29, 0x4f,
	0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf8, 0x01, 0x0a, 0x24, 0x4f, 0x72, 0x63,
	0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x2c,
	0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x09,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x34, 0x0a,
	0x0a, 0x63, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x27, 0x0a, 0x25, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc6, 0x01, 0x0a,
	0x23, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74,
	0x61, 0x12, 0x2c, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4a,
	0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x12,
	0x34, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x63, 0x6c,
	0x75, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x26, 0x0a, 0x24, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa9, 0x02,
	0x0a, 0x24, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x65, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4d, 0x65, 0x74,
	0x61, 0x12, 0x34, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x01, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b,
	0x4d, 0x65, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x65,
	0x78, 0x65, 0x63, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x49, 0x6e,
	0x66, 0x6f, 0x48, 0x00, 0x52, 0x08, 0x65, 0x78, 0x65, 0x63, 0x44, 0x61, 0x74, 0x61, 0x42, 0x0b,
	0x0a, 0x09, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x69, 0x0a, 0x25, 0x4f, 0x72, 0x63,
	0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x70, 0x72, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x55, 0x72, 0x6c, 0x22, 0x88, 0x02, 0x0a, 0x24, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x53, 0x74, 0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a,
	0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0c, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x08, 0x6a, 0x6f,
	0x62, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x07, 0x6a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x08, 0x74, 0x61, 0x73, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x27, 0x0a, 0x25, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x53, 0x74, 0x65, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x24, 0x4f, 0x72, 0x63,
	0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x2c,
	0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x22, 0x27, 0x0a, 0x25,
	0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x2d, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x4d, 0x65, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x05, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x22, 0x30, 0x0a, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x9c, 0x09, 0x0a, 0x13, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7c, 0x0a,
	0x0f, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64,
	0x12, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x63, 0x68,
	0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x0e, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x32, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x63,
	0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4a, 0x6f, 0x62, 0x12, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72,
	0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6a, 0x0a, 0x09, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x4a, 0x6f, 0x62, 0x12,
	0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d,
	0x0a, 0x0a, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x2e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4a, 0x6f, 0x62, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4a, 0x6f, 0x62, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x2e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x0a,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x2e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x65, 0x70, 0x12, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x65, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x65, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x0a, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x53, 0x74, 0x65, 0x70, 0x12, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x53, 0x74, 0x65,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x53, 0x74, 0x65,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x12, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x63,
	0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0d, 0x5a, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_v1_orchestrator_proto_rawDescOnce sync.Once
	file_proto_v1_orchestrator_proto_rawDescData = file_proto_v1_orchestrator_proto_rawDesc
)

func file_proto_v1_orchestrator_proto_rawDescGZIP() []byte {
	file_proto_v1_orchestrator_proto_rawDescOnce.Do(func() {
		file_proto_v1_orchestrator_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_v1_orchestrator_proto_rawDescData)
	})
	return file_proto_v1_orchestrator_proto_rawDescData
}

var file_proto_v1_orchestrator_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_proto_v1_orchestrator_proto_goTypes = []any{
	(*OrchestratorServiceWorkflowStartedRequest)(nil),      // 0: proto.v1.OrchestratorServiceWorkflowStartedRequest
	(*OrchestratorServiceWorkflowStartedResponse)(nil),     // 1: proto.v1.OrchestratorServiceWorkflowStartedResponse
	(*OrchestratorServiceCreateJobRequest)(nil),            // 2: proto.v1.OrchestratorServiceCreateJobRequest
	(*OrchestratorServiceCreateJobResponse)(nil),           // 3: proto.v1.OrchestratorServiceCreateJobResponse
	(*OrchestratorServiceCreateTaskRequest)(nil),           // 4: proto.v1.OrchestratorServiceCreateTaskRequest
	(*OrchestratorServiceCreateTaskResponse)(nil),          // 5: proto.v1.OrchestratorServiceCreateTaskResponse
	(*OrchestratorServiceFinishWorkflowRequest)(nil),       // 6: proto.v1.OrchestratorServiceFinishWorkflowRequest
	(*OrchestratorServiceFinishWorkflowResponse)(nil),      // 7: proto.v1.OrchestratorServiceFinishWorkflowResponse
	(*OrchestratorServiceFinishTaskRequest)(nil),           // 8: proto.v1.OrchestratorServiceFinishTaskRequest
	(*OrchestratorServiceFinishTaskResponse)(nil),          // 9: proto.v1.OrchestratorServiceFinishTaskResponse
	(*OrchestratorServiceFinishJobRequest)(nil),            // 10: proto.v1.OrchestratorServiceFinishJobRequest
	(*OrchestratorServiceFinishJobResponse)(nil),           // 11: proto.v1.OrchestratorServiceFinishJobResponse
	(*OrchestratorServiceCreateStepRequest)(nil),           // 12: proto.v1.OrchestratorServiceCreateStepRequest
	(*OrchestratorServiceCreateStepResponse)(nil),          // 13: proto.v1.OrchestratorServiceCreateStepResponse
	(*OrchestratorServiceFinishStepRequest)(nil),           // 14: proto.v1.OrchestratorServiceFinishStepRequest
	(*OrchestratorServiceFinishStepResponse)(nil),          // 15: proto.v1.OrchestratorServiceFinishStepResponse
	(*OrchestratorServiceJobStartedRequest)(nil),           // 16: proto.v1.OrchestratorServiceJobStartedRequest
	(*OrchestratorServiceJobStartedResponse)(nil),          // 17: proto.v1.OrchestratorServiceJobStartedResponse
	(*OrchestratorServiceCreateWorkflowAlertRequest)(nil),  // 18: proto.v1.OrchestratorServiceCreateWorkflowAlertRequest
	(*OrchestratorServiceCreateWorkflowAlertResponse)(nil), // 19: proto.v1.OrchestratorServiceCreateWorkflowAlertResponse
	(*WorkflowMeta)(nil),                                   // 20: proto.v1.WorkflowMeta
	(*JobMeta)(nil),                                        // 21: proto.v1.JobMeta
	(*StartTaskData)(nil),                                  // 22: proto.v1.StartTaskData
	(Conclusion)(0),                                        // 23: proto.v1.Conclusion
	(*TaskMeta)(nil),                                       // 24: proto.v1.TaskMeta
	(*ExecInfo)(nil),                                       // 25: proto.v1.ExecInfo
	(*WorkflowAlert)(nil),                                  // 26: proto.v1.WorkflowAlert
}
var file_proto_v1_orchestrator_proto_depIdxs = []int32{
	20, // 0: proto.v1.OrchestratorServiceWorkflowStartedRequest.workflow_meta:type_name -> proto.v1.WorkflowMeta
	20, // 1: proto.v1.OrchestratorServiceCreateJobRequest.workflow_meta:type_name -> proto.v1.WorkflowMeta
	21, // 2: proto.v1.OrchestratorServiceCreateJobResponse.job_meta:type_name -> proto.v1.JobMeta
	20, // 3: proto.v1.OrchestratorServiceCreateTaskRequest.workflow_meta:type_name -> proto.v1.WorkflowMeta
	21, // 4: proto.v1.OrchestratorServiceCreateTaskRequest.job_meta:type_name -> proto.v1.JobMeta
	22, // 5: proto.v1.OrchestratorServiceCreateTaskRequest.data:type_name -> proto.v1.StartTaskData
	20, // 6: proto.v1.OrchestratorServiceFinishWorkflowRequest.workflow_meta:type_name -> proto.v1.WorkflowMeta
	23, // 7: proto.v1.OrchestratorServiceFinishWorkflowRequest.conclusion:type_name -> proto.v1.Conclusion
	20, // 8: proto.v1.OrchestratorServiceFinishTaskRequest.workflow_meta:type_name -> proto.v1.WorkflowMeta
	21, // 9: proto.v1.OrchestratorServiceFinishTaskRequest.job_meta:type_name -> proto.v1.JobMeta
	24, // 10: proto.v1.OrchestratorServiceFinishTaskRequest.task_meta:type_name -> proto.v1.TaskMeta
	23, // 11: proto.v1.OrchestratorServiceFinishTaskRequest.conclusion:type_name -> proto.v1.Conclusion
	20, // 12: proto.v1.OrchestratorServiceFinishJobRequest.workflow_meta:type_name -> proto.v1.WorkflowMeta
	21, // 13: proto.v1.OrchestratorServiceFinishJobRequest.job_meta:type_name -> proto.v1.JobMeta
	23, // 14: proto.v1.OrchestratorServiceFinishJobRequest.conclusion:type_name -> proto.v1.Conclusion
	20, // 15: proto.v1.OrchestratorServiceCreateStepRequest.workflow_meta:type_name -> proto.v1.WorkflowMeta
	21, // 16: proto.v1.OrchestratorServiceCreateStepRequest.job_meta:type_name -> proto.v1.JobMeta
	24, // 17: proto.v1.OrchestratorServiceCreateStepRequest.task_meta:type_name -> proto.v1.TaskMeta
	25, // 18: proto.v1.OrchestratorServiceCreateStepRequest.exec_data:type_name -> proto.v1.ExecInfo
	20, // 19: proto.v1.OrchestratorServiceFinishStepRequest.workflow_meta:type_name -> proto.v1.WorkflowMeta
	21, // 20: proto.v1.OrchestratorServiceFinishStepRequest.job_meta:type_name -> proto.v1.JobMeta
	24, // 21: proto.v1.OrchestratorServiceFinishStepRequest.task_meta:type_name -> proto.v1.TaskMeta
	23, // 22: proto.v1.OrchestratorServiceFinishStepRequest.conclusion:type_name -> proto.v1.Conclusion
	20, // 23: proto.v1.OrchestratorServiceJobStartedRequest.workflow_meta:type_name -> proto.v1.WorkflowMeta
	21, // 24: proto.v1.OrchestratorServiceJobStartedRequest.job_meta:type_name -> proto.v1.JobMeta
	20, // 25: proto.v1.OrchestratorServiceCreateWorkflowAlertRequest.workflow_meta:type_name -> proto.v1.WorkflowMeta
	26, // 26: proto.v1.OrchestratorServiceCreateWorkflowAlertRequest.alert:type_name -> proto.v1.WorkflowAlert
	0,  // 27: proto.v1.OrchestratorService.WorkflowStarted:input_type -> proto.v1.OrchestratorServiceWorkflowStartedRequest
	6,  // 28: proto.v1.OrchestratorService.FinishWorkflow:input_type -> proto.v1.OrchestratorServiceFinishWorkflowRequest
	2,  // 29: proto.v1.OrchestratorService.CreateJob:input_type -> proto.v1.OrchestratorServiceCreateJobRequest
	10, // 30: proto.v1.OrchestratorService.FinishJob:input_type -> proto.v1.OrchestratorServiceFinishJobRequest
	16, // 31: proto.v1.OrchestratorService.JobStarted:input_type -> proto.v1.OrchestratorServiceJobStartedRequest
	4,  // 32: proto.v1.OrchestratorService.CreateTask:input_type -> proto.v1.OrchestratorServiceCreateTaskRequest
	8,  // 33: proto.v1.OrchestratorService.FinishTask:input_type -> proto.v1.OrchestratorServiceFinishTaskRequest
	12, // 34: proto.v1.OrchestratorService.CreateStep:input_type -> proto.v1.OrchestratorServiceCreateStepRequest
	14, // 35: proto.v1.OrchestratorService.FinishStep:input_type -> proto.v1.OrchestratorServiceFinishStepRequest
	18, // 36: proto.v1.OrchestratorService.CreateWorkflowAlert:input_type -> proto.v1.OrchestratorServiceCreateWorkflowAlertRequest
	1,  // 37: proto.v1.OrchestratorService.WorkflowStarted:output_type -> proto.v1.OrchestratorServiceWorkflowStartedResponse
	7,  // 38: proto.v1.OrchestratorService.FinishWorkflow:output_type -> proto.v1.OrchestratorServiceFinishWorkflowResponse
	3,  // 39: proto.v1.OrchestratorService.CreateJob:output_type -> proto.v1.OrchestratorServiceCreateJobResponse
	11, // 40: proto.v1.OrchestratorService.FinishJob:output_type -> proto.v1.OrchestratorServiceFinishJobResponse
	17, // 41: proto.v1.OrchestratorService.JobStarted:output_type -> proto.v1.OrchestratorServiceJobStartedResponse
	5,  // 42: proto.v1.OrchestratorService.CreateTask:output_type -> proto.v1.OrchestratorServiceCreateTaskResponse
	9,  // 43: proto.v1.OrchestratorService.FinishTask:output_type -> proto.v1.OrchestratorServiceFinishTaskResponse
	13, // 44: proto.v1.OrchestratorService.CreateStep:output_type -> proto.v1.OrchestratorServiceCreateStepResponse
	15, // 45: proto.v1.OrchestratorService.FinishStep:output_type -> proto.v1.OrchestratorServiceFinishStepResponse
	19, // 46: proto.v1.OrchestratorService.CreateWorkflowAlert:output_type -> proto.v1.OrchestratorServiceCreateWorkflowAlertResponse
	37, // [37:47] is the sub-list for method output_type
	27, // [27:37] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_proto_v1_orchestrator_proto_init() }
func file_proto_v1_orchestrator_proto_init() {
	if File_proto_v1_orchestrator_proto != nil {
		return
	}
	file_proto_v1_shared_proto_init()
	file_proto_v1_orchestrator_proto_msgTypes[2].OneofWrappers = []any{}
	file_proto_v1_orchestrator_proto_msgTypes[12].OneofWrappers = []any{
		(*OrchestratorServiceCreateStepRequest_ExecData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_v1_orchestrator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_orchestrator_proto_goTypes,
		DependencyIndexes: file_proto_v1_orchestrator_proto_depIdxs,
		MessageInfos:      file_proto_v1_orchestrator_proto_msgTypes,
	}.Build()
	File_proto_v1_orchestrator_proto = out.File
	file_proto_v1_orchestrator_proto_rawDesc = nil
	file_proto_v1_orchestrator_proto_goTypes = nil
	file_proto_v1_orchestrator_proto_depIdxs = nil
}
