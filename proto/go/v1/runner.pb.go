// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        (unknown)
// source: proto/v1/runner.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RunnerServiceStartJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowMeta  *WorkflowMeta          `protobuf:"bytes,1,opt,name=workflow_meta,json=workflowMeta,proto3" json:"workflow_meta,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Runner        string                 `protobuf:"bytes,4,opt,name=runner,proto3" json:"runner,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunnerServiceStartJobRequest) Reset() {
	*x = RunnerServiceStartJobRequest{}
	mi := &file_proto_v1_runner_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunnerServiceStartJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerServiceStartJobRequest) ProtoMessage() {}

func (x *RunnerServiceStartJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_runner_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerServiceStartJobRequest.ProtoReflect.Descriptor instead.
func (*RunnerServiceStartJobRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_runner_proto_rawDescGZIP(), []int{0}
}

func (x *RunnerServiceStartJobRequest) GetWorkflowMeta() *WorkflowMeta {
	if x != nil {
		return x.WorkflowMeta
	}
	return nil
}

func (x *RunnerServiceStartJobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RunnerServiceStartJobRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RunnerServiceStartJobRequest) GetRunner() string {
	if x != nil {
		return x.Runner
	}
	return ""
}

type RunnerServiceStartJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobMeta       *JobMeta               `protobuf:"bytes,1,opt,name=job_meta,json=jobMeta,proto3" json:"job_meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunnerServiceStartJobResponse) Reset() {
	*x = RunnerServiceStartJobResponse{}
	mi := &file_proto_v1_runner_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunnerServiceStartJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerServiceStartJobResponse) ProtoMessage() {}

func (x *RunnerServiceStartJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_runner_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerServiceStartJobResponse.ProtoReflect.Descriptor instead.
func (*RunnerServiceStartJobResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_runner_proto_rawDescGZIP(), []int{1}
}

func (x *RunnerServiceStartJobResponse) GetJobMeta() *JobMeta {
	if x != nil {
		return x.JobMeta
	}
	return nil
}

type RunnerServiceStartWorkflowRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	WorkflowJwt        string                 `protobuf:"bytes,1,opt,name=workflow_jwt,json=workflowJwt,proto3" json:"workflow_jwt,omitempty"`
	Name               string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	TimeoutAt          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timeout_at,json=timeoutAt,proto3" json:"timeout_at,omitempty"`
	Image              string                 `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	FilePath           string                 `protobuf:"bytes,5,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Env                []*EnvironmentVariable `protobuf:"bytes,6,rep,name=env,proto3" json:"env,omitempty"`
	GitInfo            *GitRepo               `protobuf:"bytes,7,opt,name=git_info,json=gitInfo,proto3" json:"git_info,omitempty"`
	Trigger            Trigger                `protobuf:"varint,8,opt,name=trigger,proto3,enum=proto.v1.Trigger" json:"trigger,omitempty"`
	PrNumber           *int32                 `protobuf:"varint,9,opt,name=pr_number,json=prNumber,proto3,oneof" json:"pr_number,omitempty"`
	PresignedOutputUrl string                 `protobuf:"bytes,10,opt,name=presigned_output_url,json=presignedOutputUrl,proto3" json:"presigned_output_url,omitempty"`
	// Types that are valid to be assigned to LanguageConfig:
	//
	//	*RunnerServiceStartWorkflowRequest_DenoConfig_
	LanguageConfig isRunnerServiceStartWorkflowRequest_LanguageConfig `protobuf_oneof:"language_config"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RunnerServiceStartWorkflowRequest) Reset() {
	*x = RunnerServiceStartWorkflowRequest{}
	mi := &file_proto_v1_runner_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunnerServiceStartWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerServiceStartWorkflowRequest) ProtoMessage() {}

func (x *RunnerServiceStartWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_runner_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerServiceStartWorkflowRequest.ProtoReflect.Descriptor instead.
func (*RunnerServiceStartWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_runner_proto_rawDescGZIP(), []int{2}
}

func (x *RunnerServiceStartWorkflowRequest) GetWorkflowJwt() string {
	if x != nil {
		return x.WorkflowJwt
	}
	return ""
}

func (x *RunnerServiceStartWorkflowRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RunnerServiceStartWorkflowRequest) GetTimeoutAt() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeoutAt
	}
	return nil
}

func (x *RunnerServiceStartWorkflowRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *RunnerServiceStartWorkflowRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *RunnerServiceStartWorkflowRequest) GetEnv() []*EnvironmentVariable {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *RunnerServiceStartWorkflowRequest) GetGitInfo() *GitRepo {
	if x != nil {
		return x.GitInfo
	}
	return nil
}

func (x *RunnerServiceStartWorkflowRequest) GetTrigger() Trigger {
	if x != nil {
		return x.Trigger
	}
	return Trigger_TRIGGER_UNSPECIFIED
}

func (x *RunnerServiceStartWorkflowRequest) GetPrNumber() int32 {
	if x != nil && x.PrNumber != nil {
		return *x.PrNumber
	}
	return 0
}

func (x *RunnerServiceStartWorkflowRequest) GetPresignedOutputUrl() string {
	if x != nil {
		return x.PresignedOutputUrl
	}
	return ""
}

func (x *RunnerServiceStartWorkflowRequest) GetLanguageConfig() isRunnerServiceStartWorkflowRequest_LanguageConfig {
	if x != nil {
		return x.LanguageConfig
	}
	return nil
}

func (x *RunnerServiceStartWorkflowRequest) GetDenoConfig() *RunnerServiceStartWorkflowRequest_DenoConfig {
	if x != nil {
		if x, ok := x.LanguageConfig.(*RunnerServiceStartWorkflowRequest_DenoConfig_); ok {
			return x.DenoConfig
		}
	}
	return nil
}

type isRunnerServiceStartWorkflowRequest_LanguageConfig interface {
	isRunnerServiceStartWorkflowRequest_LanguageConfig()
}

type RunnerServiceStartWorkflowRequest_DenoConfig_ struct {
	DenoConfig *RunnerServiceStartWorkflowRequest_DenoConfig `protobuf:"bytes,11,opt,name=deno_config,json=denoConfig,proto3,oneof"`
}

func (*RunnerServiceStartWorkflowRequest_DenoConfig_) isRunnerServiceStartWorkflowRequest_LanguageConfig() {
}

type RunnerServiceStartWorkflowResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to RunnerMeta:
	//
	//	*RunnerServiceStartWorkflowResponse_FlyMeta
	//	*RunnerServiceStartWorkflowResponse_DockerMeta
	RunnerMeta    isRunnerServiceStartWorkflowResponse_RunnerMeta `protobuf_oneof:"runner_meta"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunnerServiceStartWorkflowResponse) Reset() {
	*x = RunnerServiceStartWorkflowResponse{}
	mi := &file_proto_v1_runner_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunnerServiceStartWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerServiceStartWorkflowResponse) ProtoMessage() {}

func (x *RunnerServiceStartWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_runner_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerServiceStartWorkflowResponse.ProtoReflect.Descriptor instead.
func (*RunnerServiceStartWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_runner_proto_rawDescGZIP(), []int{3}
}

func (x *RunnerServiceStartWorkflowResponse) GetRunnerMeta() isRunnerServiceStartWorkflowResponse_RunnerMeta {
	if x != nil {
		return x.RunnerMeta
	}
	return nil
}

func (x *RunnerServiceStartWorkflowResponse) GetFlyMeta() *FlyRunMeta {
	if x != nil {
		if x, ok := x.RunnerMeta.(*RunnerServiceStartWorkflowResponse_FlyMeta); ok {
			return x.FlyMeta
		}
	}
	return nil
}

func (x *RunnerServiceStartWorkflowResponse) GetDockerMeta() *DockerRunMeta {
	if x != nil {
		if x, ok := x.RunnerMeta.(*RunnerServiceStartWorkflowResponse_DockerMeta); ok {
			return x.DockerMeta
		}
	}
	return nil
}

type isRunnerServiceStartWorkflowResponse_RunnerMeta interface {
	isRunnerServiceStartWorkflowResponse_RunnerMeta()
}

type RunnerServiceStartWorkflowResponse_FlyMeta struct {
	FlyMeta *FlyRunMeta `protobuf:"bytes,1,opt,name=fly_meta,json=flyMeta,proto3,oneof"`
}

type RunnerServiceStartWorkflowResponse_DockerMeta struct {
	DockerMeta *DockerRunMeta `protobuf:"bytes,2,opt,name=docker_meta,json=dockerMeta,proto3,oneof"`
}

func (*RunnerServiceStartWorkflowResponse_FlyMeta) isRunnerServiceStartWorkflowResponse_RunnerMeta() {
}

func (*RunnerServiceStartWorkflowResponse_DockerMeta) isRunnerServiceStartWorkflowResponse_RunnerMeta() {
}

type RunnerServiceStopJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowMeta  *WorkflowMeta          `protobuf:"bytes,1,opt,name=workflow_meta,json=workflowMeta,proto3" json:"workflow_meta,omitempty"`
	JobMeta       *JobMeta               `protobuf:"bytes,2,opt,name=job_meta,json=jobMeta,proto3" json:"job_meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunnerServiceStopJobRequest) Reset() {
	*x = RunnerServiceStopJobRequest{}
	mi := &file_proto_v1_runner_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunnerServiceStopJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerServiceStopJobRequest) ProtoMessage() {}

func (x *RunnerServiceStopJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_runner_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerServiceStopJobRequest.ProtoReflect.Descriptor instead.
func (*RunnerServiceStopJobRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_runner_proto_rawDescGZIP(), []int{4}
}

func (x *RunnerServiceStopJobRequest) GetWorkflowMeta() *WorkflowMeta {
	if x != nil {
		return x.WorkflowMeta
	}
	return nil
}

func (x *RunnerServiceStopJobRequest) GetJobMeta() *JobMeta {
	if x != nil {
		return x.JobMeta
	}
	return nil
}

type RunnerServiceStopJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunnerServiceStopJobResponse) Reset() {
	*x = RunnerServiceStopJobResponse{}
	mi := &file_proto_v1_runner_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunnerServiceStopJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerServiceStopJobResponse) ProtoMessage() {}

func (x *RunnerServiceStopJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_runner_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerServiceStopJobResponse.ProtoReflect.Descriptor instead.
func (*RunnerServiceStopJobResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_runner_proto_rawDescGZIP(), []int{5}
}

type RunnerServiceStopWorkflowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowMeta  *WorkflowMeta          `protobuf:"bytes,1,opt,name=workflow_meta,json=workflowMeta,proto3" json:"workflow_meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunnerServiceStopWorkflowRequest) Reset() {
	*x = RunnerServiceStopWorkflowRequest{}
	mi := &file_proto_v1_runner_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunnerServiceStopWorkflowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerServiceStopWorkflowRequest) ProtoMessage() {}

func (x *RunnerServiceStopWorkflowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_runner_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerServiceStopWorkflowRequest.ProtoReflect.Descriptor instead.
func (*RunnerServiceStopWorkflowRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_runner_proto_rawDescGZIP(), []int{6}
}

func (x *RunnerServiceStopWorkflowRequest) GetWorkflowMeta() *WorkflowMeta {
	if x != nil {
		return x.WorkflowMeta
	}
	return nil
}

type RunnerServiceStopWorkflowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunnerServiceStopWorkflowResponse) Reset() {
	*x = RunnerServiceStopWorkflowResponse{}
	mi := &file_proto_v1_runner_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunnerServiceStopWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerServiceStopWorkflowResponse) ProtoMessage() {}

func (x *RunnerServiceStopWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_runner_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerServiceStopWorkflowResponse.ProtoReflect.Descriptor instead.
func (*RunnerServiceStopWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_runner_proto_rawDescGZIP(), []int{7}
}

type RunnerServiceJobStartedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowMeta  *WorkflowMeta          `protobuf:"bytes,1,opt,name=workflow_meta,json=workflowMeta,proto3" json:"workflow_meta,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunnerServiceJobStartedRequest) Reset() {
	*x = RunnerServiceJobStartedRequest{}
	mi := &file_proto_v1_runner_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunnerServiceJobStartedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerServiceJobStartedRequest) ProtoMessage() {}

func (x *RunnerServiceJobStartedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_runner_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerServiceJobStartedRequest.ProtoReflect.Descriptor instead.
func (*RunnerServiceJobStartedRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_runner_proto_rawDescGZIP(), []int{8}
}

func (x *RunnerServiceJobStartedRequest) GetWorkflowMeta() *WorkflowMeta {
	if x != nil {
		return x.WorkflowMeta
	}
	return nil
}

func (x *RunnerServiceJobStartedRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RunnerServiceJobStartedRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RunnerServiceJobStartedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunnerServiceJobStartedResponse) Reset() {
	*x = RunnerServiceJobStartedResponse{}
	mi := &file_proto_v1_runner_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunnerServiceJobStartedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerServiceJobStartedResponse) ProtoMessage() {}

func (x *RunnerServiceJobStartedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_runner_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerServiceJobStartedResponse.ProtoReflect.Descriptor instead.
func (*RunnerServiceJobStartedResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_runner_proto_rawDescGZIP(), []int{9}
}

type RunnerServiceGetLogStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowJwt   string                 `protobuf:"bytes,1,opt,name=workflow_jwt,json=workflowJwt,proto3" json:"workflow_jwt,omitempty"`
	StepId        *string                `protobuf:"bytes,2,opt,name=step_id,json=stepId,proto3,oneof" json:"step_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunnerServiceGetLogStreamRequest) Reset() {
	*x = RunnerServiceGetLogStreamRequest{}
	mi := &file_proto_v1_runner_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunnerServiceGetLogStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerServiceGetLogStreamRequest) ProtoMessage() {}

func (x *RunnerServiceGetLogStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_runner_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerServiceGetLogStreamRequest.ProtoReflect.Descriptor instead.
func (*RunnerServiceGetLogStreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_runner_proto_rawDescGZIP(), []int{10}
}

func (x *RunnerServiceGetLogStreamRequest) GetWorkflowJwt() string {
	if x != nil {
		return x.WorkflowJwt
	}
	return ""
}

func (x *RunnerServiceGetLogStreamRequest) GetStepId() string {
	if x != nil && x.StepId != nil {
		return *x.StepId
	}
	return ""
}

type RunnerServiceGetLogStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunnerServiceGetLogStreamResponse) Reset() {
	*x = RunnerServiceGetLogStreamResponse{}
	mi := &file_proto_v1_runner_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunnerServiceGetLogStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerServiceGetLogStreamResponse) ProtoMessage() {}

func (x *RunnerServiceGetLogStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_runner_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerServiceGetLogStreamResponse.ProtoReflect.Descriptor instead.
func (*RunnerServiceGetLogStreamResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_runner_proto_rawDescGZIP(), []int{11}
}

func (x *RunnerServiceGetLogStreamResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type RunnerServiceCleanUpJobsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkflowJwt   string                 `protobuf:"bytes,1,opt,name=workflow_jwt,json=workflowJwt,proto3" json:"workflow_jwt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunnerServiceCleanUpJobsRequest) Reset() {
	*x = RunnerServiceCleanUpJobsRequest{}
	mi := &file_proto_v1_runner_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunnerServiceCleanUpJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerServiceCleanUpJobsRequest) ProtoMessage() {}

func (x *RunnerServiceCleanUpJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_runner_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerServiceCleanUpJobsRequest.ProtoReflect.Descriptor instead.
func (*RunnerServiceCleanUpJobsRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_runner_proto_rawDescGZIP(), []int{12}
}

func (x *RunnerServiceCleanUpJobsRequest) GetWorkflowJwt() string {
	if x != nil {
		return x.WorkflowJwt
	}
	return ""
}

type RunnerServiceCleanUpJobsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunnerServiceCleanUpJobsResponse) Reset() {
	*x = RunnerServiceCleanUpJobsResponse{}
	mi := &file_proto_v1_runner_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunnerServiceCleanUpJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerServiceCleanUpJobsResponse) ProtoMessage() {}

func (x *RunnerServiceCleanUpJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_runner_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerServiceCleanUpJobsResponse.ProtoReflect.Descriptor instead.
func (*RunnerServiceCleanUpJobsResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_runner_proto_rawDescGZIP(), []int{13}
}

type RunnerServiceStartWorkflowRequest_DenoConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunnerServiceStartWorkflowRequest_DenoConfig) Reset() {
	*x = RunnerServiceStartWorkflowRequest_DenoConfig{}
	mi := &file_proto_v1_runner_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunnerServiceStartWorkflowRequest_DenoConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunnerServiceStartWorkflowRequest_DenoConfig) ProtoMessage() {}

func (x *RunnerServiceStartWorkflowRequest_DenoConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_runner_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunnerServiceStartWorkflowRequest_DenoConfig.ProtoReflect.Descriptor instead.
func (*RunnerServiceStartWorkflowRequest_DenoConfig) Descriptor() ([]byte, []int) {
	return file_proto_v1_runner_proto_rawDescGZIP(), []int{2, 0}
}

func (x *RunnerServiceStartWorkflowRequest_DenoConfig) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_proto_v1_runner_proto protoreflect.FileDescriptor

var file_proto_v1_runner_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x75, 0x6e, 0x6e, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x97, 0x01, 0x0a, 0x1c, 0x52, 0x75,
	0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x75, 0x6e,
	0x6e, 0x65, 0x72, 0x22, 0x4d, 0x0a, 0x1d, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4d, 0x65,
	0x74, 0x61, 0x22, 0xcc, 0x04, 0x0a, 0x21, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6a, 0x77, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4a, 0x77, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x39, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2f, 0x0a,
	0x03, 0x65, 0x6e, 0x76, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x2c,
	0x0a, 0x08, 0x67, 0x69, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x69, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x52, 0x07, 0x67, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x07,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x72, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x08,
	0x70, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x14, 0x70,
	0x72, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x65, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x59, 0x0a,
	0x0b, 0x64, 0x65, 0x6e, 0x6f, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75,
	0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x44, 0x65, 0x6e, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x65,
	0x6e, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x26, 0x0a, 0x0a, 0x44, 0x65, 0x6e, 0x6f,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x42, 0x11, 0x0a, 0x0f, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0xa2, 0x01, 0x0a, 0x22, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x08, 0x66, 0x6c, 0x79, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6c, 0x79, 0x52, 0x75, 0x6e, 0x4d, 0x65, 0x74, 0x61,
	0x48, 0x00, 0x52, 0x07, 0x66, 0x6c, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0b, 0x64,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x63, 0x6b,
	0x65, 0x72, 0x52, 0x75, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x6f, 0x63,
	0x6b, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x42, 0x0d, 0x0a, 0x0b, 0x72, 0x75, 0x6e, 0x6e, 0x65,
	0x72, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x88, 0x01, 0x0a, 0x1b, 0x52, 0x75, 0x6e, 0x6e, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x4a, 0x6f, 0x62, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x4a, 0x6f, 0x62, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4d, 0x65, 0x74,
	0x61, 0x22, 0x1e, 0x0a, 0x1c, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x5f, 0x0a, 0x20, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x65,
	0x74, 0x61, 0x22, 0x23, 0x0a, 0x21, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x1e, 0x52, 0x75, 0x6e, 0x6e,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0d, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x21, 0x0a, 0x1f, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6f, 0x0a, 0x20, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6a, 0x77, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4a, 0x77, 0x74, 0x12, 0x1c, 0x0a, 0x07, 0x73,
	0x74, 0x65, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x73, 0x74, 0x65, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x74,
	0x65, 0x70, 0x5f, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x21, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x44, 0x0a, 0x1f,
	0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x65,
	0x61, 0x6e, 0x55, 0x70, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x6a, 0x77, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4a,
	0x77, 0x74, 0x22, 0x22, 0x0a, 0x20, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x55, 0x70, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xe4, 0x04, 0x0a, 0x0d, 0x52, 0x75, 0x6e, 0x6e, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4a, 0x6f, 0x62,
	0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x6e,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x58, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x70, 0x4a, 0x6f, 0x62, 0x12, 0x25, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x70, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x70,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0a, 0x4a,
	0x6f, 0x62, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4a, 0x6f, 0x62, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x2a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x0b, 0x43, 0x6c, 0x65, 0x61, 0x6e,
	0x55, 0x70, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x65, 0x61, 0x6e, 0x55, 0x70, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x75, 0x6e,
	0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x55,
	0x70, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0d, 0x5a,
	0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_v1_runner_proto_rawDescOnce sync.Once
	file_proto_v1_runner_proto_rawDescData = file_proto_v1_runner_proto_rawDesc
)

func file_proto_v1_runner_proto_rawDescGZIP() []byte {
	file_proto_v1_runner_proto_rawDescOnce.Do(func() {
		file_proto_v1_runner_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_v1_runner_proto_rawDescData)
	})
	return file_proto_v1_runner_proto_rawDescData
}

var file_proto_v1_runner_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_v1_runner_proto_goTypes = []any{
	(*RunnerServiceStartJobRequest)(nil),                 // 0: proto.v1.RunnerServiceStartJobRequest
	(*RunnerServiceStartJobResponse)(nil),                // 1: proto.v1.RunnerServiceStartJobResponse
	(*RunnerServiceStartWorkflowRequest)(nil),            // 2: proto.v1.RunnerServiceStartWorkflowRequest
	(*RunnerServiceStartWorkflowResponse)(nil),           // 3: proto.v1.RunnerServiceStartWorkflowResponse
	(*RunnerServiceStopJobRequest)(nil),                  // 4: proto.v1.RunnerServiceStopJobRequest
	(*RunnerServiceStopJobResponse)(nil),                 // 5: proto.v1.RunnerServiceStopJobResponse
	(*RunnerServiceStopWorkflowRequest)(nil),             // 6: proto.v1.RunnerServiceStopWorkflowRequest
	(*RunnerServiceStopWorkflowResponse)(nil),            // 7: proto.v1.RunnerServiceStopWorkflowResponse
	(*RunnerServiceJobStartedRequest)(nil),               // 8: proto.v1.RunnerServiceJobStartedRequest
	(*RunnerServiceJobStartedResponse)(nil),              // 9: proto.v1.RunnerServiceJobStartedResponse
	(*RunnerServiceGetLogStreamRequest)(nil),             // 10: proto.v1.RunnerServiceGetLogStreamRequest
	(*RunnerServiceGetLogStreamResponse)(nil),            // 11: proto.v1.RunnerServiceGetLogStreamResponse
	(*RunnerServiceCleanUpJobsRequest)(nil),              // 12: proto.v1.RunnerServiceCleanUpJobsRequest
	(*RunnerServiceCleanUpJobsResponse)(nil),             // 13: proto.v1.RunnerServiceCleanUpJobsResponse
	(*RunnerServiceStartWorkflowRequest_DenoConfig)(nil), // 14: proto.v1.RunnerServiceStartWorkflowRequest.DenoConfig
	(*WorkflowMeta)(nil),                                 // 15: proto.v1.WorkflowMeta
	(*JobMeta)(nil),                                      // 16: proto.v1.JobMeta
	(*timestamppb.Timestamp)(nil),                        // 17: google.protobuf.Timestamp
	(*EnvironmentVariable)(nil),                          // 18: proto.v1.EnvironmentVariable
	(*GitRepo)(nil),                                      // 19: proto.v1.GitRepo
	(Trigger)(0),                                         // 20: proto.v1.Trigger
	(*FlyRunMeta)(nil),                                   // 21: proto.v1.FlyRunMeta
	(*DockerRunMeta)(nil),                                // 22: proto.v1.DockerRunMeta
}
var file_proto_v1_runner_proto_depIdxs = []int32{
	15, // 0: proto.v1.RunnerServiceStartJobRequest.workflow_meta:type_name -> proto.v1.WorkflowMeta
	16, // 1: proto.v1.RunnerServiceStartJobResponse.job_meta:type_name -> proto.v1.JobMeta
	17, // 2: proto.v1.RunnerServiceStartWorkflowRequest.timeout_at:type_name -> google.protobuf.Timestamp
	18, // 3: proto.v1.RunnerServiceStartWorkflowRequest.env:type_name -> proto.v1.EnvironmentVariable
	19, // 4: proto.v1.RunnerServiceStartWorkflowRequest.git_info:type_name -> proto.v1.GitRepo
	20, // 5: proto.v1.RunnerServiceStartWorkflowRequest.trigger:type_name -> proto.v1.Trigger
	14, // 6: proto.v1.RunnerServiceStartWorkflowRequest.deno_config:type_name -> proto.v1.RunnerServiceStartWorkflowRequest.DenoConfig
	21, // 7: proto.v1.RunnerServiceStartWorkflowResponse.fly_meta:type_name -> proto.v1.FlyRunMeta
	22, // 8: proto.v1.RunnerServiceStartWorkflowResponse.docker_meta:type_name -> proto.v1.DockerRunMeta
	15, // 9: proto.v1.RunnerServiceStopJobRequest.workflow_meta:type_name -> proto.v1.WorkflowMeta
	16, // 10: proto.v1.RunnerServiceStopJobRequest.job_meta:type_name -> proto.v1.JobMeta
	15, // 11: proto.v1.RunnerServiceStopWorkflowRequest.workflow_meta:type_name -> proto.v1.WorkflowMeta
	15, // 12: proto.v1.RunnerServiceJobStartedRequest.workflow_meta:type_name -> proto.v1.WorkflowMeta
	2,  // 13: proto.v1.RunnerService.StartWorkflow:input_type -> proto.v1.RunnerServiceStartWorkflowRequest
	0,  // 14: proto.v1.RunnerService.StartJob:input_type -> proto.v1.RunnerServiceStartJobRequest
	4,  // 15: proto.v1.RunnerService.StopJob:input_type -> proto.v1.RunnerServiceStopJobRequest
	8,  // 16: proto.v1.RunnerService.JobStarted:input_type -> proto.v1.RunnerServiceJobStartedRequest
	10, // 17: proto.v1.RunnerService.GetLogStream:input_type -> proto.v1.RunnerServiceGetLogStreamRequest
	12, // 18: proto.v1.RunnerService.CleanUpJobs:input_type -> proto.v1.RunnerServiceCleanUpJobsRequest
	3,  // 19: proto.v1.RunnerService.StartWorkflow:output_type -> proto.v1.RunnerServiceStartWorkflowResponse
	1,  // 20: proto.v1.RunnerService.StartJob:output_type -> proto.v1.RunnerServiceStartJobResponse
	5,  // 21: proto.v1.RunnerService.StopJob:output_type -> proto.v1.RunnerServiceStopJobResponse
	9,  // 22: proto.v1.RunnerService.JobStarted:output_type -> proto.v1.RunnerServiceJobStartedResponse
	11, // 23: proto.v1.RunnerService.GetLogStream:output_type -> proto.v1.RunnerServiceGetLogStreamResponse
	13, // 24: proto.v1.RunnerService.CleanUpJobs:output_type -> proto.v1.RunnerServiceCleanUpJobsResponse
	19, // [19:25] is the sub-list for method output_type
	13, // [13:19] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_v1_runner_proto_init() }
func file_proto_v1_runner_proto_init() {
	if File_proto_v1_runner_proto != nil {
		return
	}
	file_proto_v1_shared_proto_init()
	file_proto_v1_runner_proto_msgTypes[2].OneofWrappers = []any{
		(*RunnerServiceStartWorkflowRequest_DenoConfig_)(nil),
	}
	file_proto_v1_runner_proto_msgTypes[3].OneofWrappers = []any{
		(*RunnerServiceStartWorkflowResponse_FlyMeta)(nil),
		(*RunnerServiceStartWorkflowResponse_DockerMeta)(nil),
	}
	file_proto_v1_runner_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_v1_runner_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_runner_proto_goTypes,
		DependencyIndexes: file_proto_v1_runner_proto_depIdxs,
		MessageInfos:      file_proto_v1_runner_proto_msgTypes,
	}.Build()
	File_proto_v1_runner_proto = out.File
	file_proto_v1_runner_proto_rawDesc = nil
	file_proto_v1_runner_proto_goTypes = nil
	file_proto_v1_runner_proto_depIdxs = nil
}
